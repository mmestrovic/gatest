name: Blah

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Select an environment
        type: choice
        required: true
        default: "dev"
        options:
          - dev
          - qa
          - staging
          - pre
          - prod

      app3:
        type: boolean
        description: Deploy on app3
        default: true

      app4:
        type: boolean
        description: Deploy on app4
        default: true

      app5:
        type: boolean
        description: Deploy on app5
        default: true

      app8:
        type: boolean
        description: Deploy on app8
        default: true

      app9:
        type: boolean
        description: Deploy on app9
        default: true

      app10:
        type: boolean
        description: Deploy on app10
        default: true

  workflow_call:

env:
  FINDOX_APP_NAME: "scrapers"
  FINDOX_APP_PACKAGE_PATH: "/app/scrapers"
  NETCORE_VERSION: "6.0.x"

jobs:
  env_check:
    name: Environment check
    runs-on: ubuntu-latest
    steps:
      - name: Environment check on branch
        id: branch_check
        run: |
          targets=()

          if [ "${{ inputs.app3 }}" = "true" ]; then
            targets+=(3)
          elif [ "${{ inputs.app4 }}" = "true" ]; then
            targets+=(4)
          elif [ "${{ inputs.app5 }}" = "true" ]; then
            targets+=(5)
          elif [ "${{ inputs.app8 }}" = "true" ]; then
            targets+=(8)
          else
            
          fi

          echo ${targets[@]}




  targets_setup:
    name: Targets
    runs-on: ubuntu-latest
    steps:
      - name: Set targets
        id: targets
        run: |
              echo "Running on branch ${{ github.ref }}"
    
              if [ "${{ inputs.environment }}" = "prod" ]; then
                echo "env_name=prod" >> $GITHUB_OUTPUT
              elif [ "${{ inputs.environment }}" = "staging" ]; then
                echo "env_name=staging" >> $GITHUB_OUTPUT
              elif [ "${{ inputs.environment }}" = "qa" ]; then
                echo "env_name=qa" >> $GITHUB_OUTPUT
              elif [ "${{ inputs.environment }}" = "pre" ]; then
                echo "env_name=pre" >> $GITHUB_OUTPUT
              else
                echo "env_name=dev" >> $GITHUB_OUTPUT
              fi
    
      - name: Show targets
        run: echo "Setting up environment ${{ steps.targets }}"
    
    outputs:
      env_name: ${{ steps.targets }}
    


  build:
      name: Build
      needs: env_check
      runs-on: ubuntu-latest
      steps:

        - name: Set the value
          id: step_one
          run: echo "action_state=yellow" >> $GITHUB_ENV
  
        - name: Use the value
          id: step_two
          run: echo "${{ env.action_state }}"

        - name: Echo environment
          id: echo_env
          shell: bash
          run: |
            set -e
            echo "${{ needs.env_check.outputs.env_name }}"

        - name: Output Inputs
          run: echo "${{ toJSON(github.event.inputs) }}"

        - name: Join Inputs
          run: echo "${{ join(github.event.inputs, ', ') }}"