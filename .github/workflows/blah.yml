name: Blah

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Select an environment
        type: choice
        required: true
        default: "dev"
        options:
          - dev
          - qa
          - staging
          - pre
          - prod

      app3:
        type: boolean
        description: Deploy on app3
        default: true

      app4:
        type: boolean
        description: Deploy on app4
        default: true

      app5:
        type: boolean
        description: Deploy on app5
        default: true

      app8:
        type: boolean
        description: Deploy on app8
        default: true

      app9:
        type: boolean
        description: Deploy on app9
        default: true

      app10:
        type: boolean
        description: Deploy on app10
        default: true

  workflow_call:

env:
  FINDOX_APP_NAME: "scrapers"
  FINDOX_APP_PACKAGE_PATH: "/app/scrapers"
  NETCORE_VERSION: "6.0.x"

jobs:
  env_check:
    name: Environment check
    runs-on: ubuntu-latest
    steps:
      - name: Environment check on branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"

          if [ "${{ inputs.environment }}" = "prod" ]; then
            echo "env_name=prod" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.environment }}" = "staging" ]; then
            echo "env_name=staging" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.environment }}" = "qa" ]; then
            echo "env_name=qa" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.environment }}" = "pre" ]; then
            echo "env_name=pre" >> $GITHUB_OUTPUT
          else
            echo "env_name=dev" >> $GITHUB_OUTPUT
          fi

      - name: Use environment setup in previous step
        run: echo "Setting up environment ${{ steps.branch_check.outputs.env_name }}"

    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}

  set_targets:
    name: Set targets
    runs-on: ubuntu-latest
    environment: ${{ needs.env_check.outputs.env_name }}
    needs: env_check
    steps:
      - name: Set targets
        id: set_tgs
        run: |
              targets=()

              if [ "${{ inputs.app3 }}" = true ]; then
                targets+=(3)
              fi
              if [ "${{ inputs.app4 }}" = true ]; then
                targets+=(4)
              fi
              if [ "${{ inputs.app5 }}" = true ]; then
                targets+=(5)
              fi
              if [ "${{ inputs.app8 }}" = true ]; then
                targets+=(8)
              fi
              if [ "${{ inputs.app9 }}" = true ]; then
                targets+=(9)
              fi
              if [ "${{ inputs.app10 }}" = true ]; then
                targets+=(10)
              fi

              echo ${targets[@]}
              IFS=,
              echo "${targets[*]}"

              echo "targets=${targets[*]}" >> $GITHUB_OUTPUT

      - name: Use environment setup in previous step
        run: echo "Setting up targets ${{ steps.set_tgs.outputs.targets }}"
              
    outputs:
      targets: ${{ steps.set_tgs.outputs.targets }}

  build:
    name: Build
    needs: env_check
    environment: ${{ needs.env_check.outputs.env_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Set the value
        id: step_one
        run: echo "action_state=yellow" >> $GITHUB_ENV

      - name: Use the value
        id: step_two
        run: echo "${{ env.action_state }}"

      - name: Echo environment
        id: echo_env
        shell: bash
        run: |
          set -e
          echo "${{ needs.env_check.outputs.env_name }}"

      - name: Output Inputs
        run: echo "${{ toJSON(github.event.inputs) }}"

      - name: Join Inputs
        run: echo "${{ join(github.event.inputs, ', ') }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d_%H%M%S')"

      - name: Print current date
        id: print_date
        shell: bash
        run: |
          echo ${{ steps.date.outputs.date }}

      - name: Create ZIP
        uses: thedoctor0/zip-release@0.7.5
        with:
          path: "./demo"
          type: 'zip'
          filename: 'demo-${{ steps.date.outputs.date }}.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig'

      - name: Set sha256sum to output
        id: sha256sum
        shell: bash
        run: |
          set -e
          echo "artifact_hash=$(sha256sum demo-${{ steps.date.outputs.date }}.zip | awk '{ print $1 }')" >> $GITHUB_OUTPUT

    outputs:
      artifact_url: "https://s3.amazon.com/ARTIFACT_URL"
      artifact_hash: ${{ steps.sha256sum.outputs.artifact_hash }}
    
  run:
    name: Run
    needs: [build, set_targets, env_check]
    environment: ${{ needs.env_check.outputs.env_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Create pillar
        id: create_pillar
        shell: bash
        run: |

          #!/usr/bin/env bash

          JSON=$(cat <<-END
          {
            "deploy": {
              "artifact_url": "${{ needs.build.outputs.artifact_url }}",
              "artifact_hash": "${{ needs.build.outputs.artifact_hash }}"
              "env": "${{ needs.env_check.outputs.env_name }}",
              "appname": "${{ env.FINDOX_APP_NAME }}",
              "version": "1.23",
              "targets": "${{ needs.set_targets.outputs.targets }}"
              ]
            }
          }
          END
          )

          echo "$JSON"